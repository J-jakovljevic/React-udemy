{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Think\\\\Desktop\\\\react udemy\\\\React-udemy\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport './ExpenseForm.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(''); // po default-u input polje je prazno\n\n  const [enteredAmount, setEnteredAmount] = useState(''); // kada se slusa promena sa input polja, uvek ce biti string, bez obzira sto polje cuva brojeve ili datum\n\n  const [enteredDate, setEnteredDate] = useState('');\n  /*  const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    });*/\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /*   setUserInput({\r\n        ...userInput,       // ne smemo da izgubimo ostala dva polja\r\n        enteredTitle: event.target.value,\r\n       })    --> nije dobar nacin jer se kopiraju stare vrednosti za ostala dva polja */\n\n    /*    setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n             return {...prevState, enteredTitle: event.target.value}\r\n        });*/\n  };\n\n  const amountChangeHandler = event => {//setEnteredAmount(event.target.value);\n\n    /*   setUserInput({\r\n           ...userInput,\r\n           enteredAmount: event.target.value\r\n       })*/\n\n    /*    setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n            return {...prevState, enteredAmount: event.target.value}\r\n       });*/\n  };\n\n  const dateChangeHandler = event => {//setEnteredDate(event.target.value);\n\n    /*   setUserInput({\r\n        ...userInput,\r\n        enteredDate: event.target.value\r\n    }) */\n\n    /*   setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n           return {...prevState, enteredDate: event.target.value}\r\n      });*/\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate) // enteredDate koji je string se konvertuje u date\n\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date"],"sources":["C:/Users/Think/Desktop/react udemy/React-udemy/01-starting-setup/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import './ExpenseForm.css';\r\nimport React, { useState } from 'react';\r\n\r\nconst ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');  // po default-u input polje je prazno\r\n    const [enteredAmount, setEnteredAmount] = useState('');  // kada se slusa promena sa input polja, uvek ce biti string, bez obzira sto polje cuva brojeve ili datum\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  /*  const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    });*/\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    /*   setUserInput({\r\n        ...userInput,       // ne smemo da izgubimo ostala dva polja\r\n        enteredTitle: event.target.value,\r\n       })    --> nije dobar nacin jer se kopiraju stare vrednosti za ostala dva polja */\r\n\r\n   /*    setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n            return {...prevState, enteredTitle: event.target.value}\r\n       });*/\r\n    };\r\n    \r\n    const amountChangeHandler = (event) => {\r\n        //setEnteredAmount(event.target.value);\r\n     /*   setUserInput({\r\n            ...userInput,\r\n            enteredAmount: event.target.value\r\n        })*/\r\n    /*    setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n            return {...prevState, enteredAmount: event.target.value}\r\n       });*/\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n       //setEnteredDate(event.target.value);\r\n    /*   setUserInput({\r\n        ...userInput,\r\n        enteredDate: event.target.value\r\n    }) */\r\n /*   setUserInput((prevState) => {  // f-ja koja garantuje da ce dobaviti apdejtovane vrednosti\r\n        return {...prevState, enteredDate: event.target.value}\r\n   });*/\r\n    };\r\n\r\n    const submitHandler = (event) => {  \r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)  // enteredDate koji je string se konvertuje u date\r\n        }\r\n    };\r\n\r\n    return <form onSubmit = {submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='submit'>Add expense</button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm;"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD,CADsB,CACiC;;EACvD,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD,CAFsB,CAEmC;;EACzD,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EAEF;AACF;AACA;AACA;AACA;;EAEI,MAAMQ,kBAAkB,GAAIC,KAAD,IAAW;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;IACJ;AACJ;AACA;AACA;;IAEG;AACH;AACA;EACK,CAVD;;EAYA,MAAMC,mBAAmB,GAAIH,KAAD,IAAW,CACnC;;IACH;AACL;AACA;AACA;;IACI;AACJ;AACA;EACK,CATD;;EAWA,MAAMI,iBAAiB,GAAIJ,KAAD,IAAW,CAClC;;IACH;AACJ;AACA;AACA;;IACC;AACD;AACA;EACK,CATD;;EAWA,MAAMK,aAAa,GAAIL,KAAD,IAAW;IAC7BA,KAAK,CAACM,cAAN;IAEA,MAAMC,WAAW,GAAG;MAChBC,KAAK,EAAEf,YADS;MAEhBgB,MAAM,EAAEd,aAFQ;MAGhBe,IAAI,EAAE,IAAIC,IAAJ,CAASd,WAAT,CAHU,CAGa;;IAHb,CAApB;EAKH,CARD;;EAUA,oBAAO;IAAM,QAAQ,EAAIQ,aAAlB;IAAA,wBACH;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEN;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,QAAZ;UAAqB,GAAG,EAAC,MAAzB;UAAgC,IAAI,EAAC,MAArC;UAA4C,QAAQ,EAAEI;QAAtD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,GAAG,EAAC,YAAvB;UAAoC,GAAG,EAAC,YAAxC;UAAqD,QAAQ,EAAEC;QAA/D;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAeH;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAfG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAmBH,CA1ED;;GAAMZ,W;;KAAAA,W;AA4EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}