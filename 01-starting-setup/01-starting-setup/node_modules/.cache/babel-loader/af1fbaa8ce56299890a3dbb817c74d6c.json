{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Think\\\\Desktop\\\\react udemy\\\\React-udemy\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  }; // filter pravi novi niz, ne dira stari kako ne bismo ostali bez nekih podataka\n\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : filteredExpenses.map(\n      /* dinamicko prikazivanje */\n      expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        /* pomocu ovoga ne dolazi do onog problema oko prepisivanja elemenata */\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","ExpensesFilter","Card","React","useState","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"sources":["C:/Users/Think/Desktop/react udemy/React-udemy/01-starting-setup/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  // filter pravi novi niz, ne dira stari kako ne bismo ostali bez nekih podataka\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        {filteredExpenses.length === 0 ? (\r\n          <p>No expenses found.</p>\r\n        ) : (\r\n          filteredExpenses.map(\r\n            /* dinamicko prikazivanje */\r\n            (expense) => (\r\n              <ExpenseItem\r\n                key={\r\n                  expense.id\r\n                } /* pomocu ovoga ne dolazi do onog problema oko prepisivanja elemenata */\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n              />\r\n            )\r\n          )\r\n        )}\r\n\r\n        {/*  <Card className=\"expenses\">\r\n        <ExpenseItem\r\n          title={props.items[0].title}\r\n          amount={props.items[0].amount}\r\n          date={props.items[0].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[1].title}\r\n          amount={props.items[1].amount}\r\n          date={props.items[1].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[2].title}\r\n          amount={props.items[2].amount}\r\n          date={props.items[2].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.items[3].title}\r\n          amount={props.items[3].amount}\r\n          date={props.items[3].date}\r\n        ></ExpenseItem>\r\n      </Card> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;EAEA,MAAMK,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CF,eAAe,CAACE,YAAD,CAAf;EACD,CAFD,CAH0B,CAO1B;;;EACA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;IACvD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;EACD,CAFwB,CAAzB;EAIA,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEA,YADZ;QAEE,cAAc,EAAEE;MAFlB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,gBACC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,GAGCP,gBAAgB,CAACQ,GAAjB;MACE;MACCL,OAAD,iBACE,QAAC,WAAD;QAGI;QACF,KAAK,EAAEA,OAAO,CAACM,KAJjB;QAKE,MAAM,EAAEN,OAAO,CAACO,MALlB;QAME,IAAI,EAAEP,OAAO,CAACC;MANhB,GAEID,OAAO,CAACQ,EAFZ;QAAA;QAAA;QAAA;MAAA,QAHJ,CARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkDD,CA9DD;;GAAMjB,Q;;KAAAA,Q;AAgEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}