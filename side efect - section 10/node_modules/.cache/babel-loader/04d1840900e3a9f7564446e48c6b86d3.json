{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Think\\\\Desktop\\\\react udemy\\\\React-udemy\\\\side efect - section 10\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button'; // moze da se pise izvan login komponente jer ne interaguje ni sa cim unutar login komponente\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  // drugi arg je f-ja koja ce pozvati akciju koja ce biti consumed by prvi arg\n  if (action.type === 'USER_INPUT') {\n    // ono sto saljemo kao action ce biti objekat jer smo tako postavili u 54. liniji, a taj objekat ima type polje\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }; // za INPUT_BLUR ne menjamo value, pa ovde preuzimamo najnoviju vrednost pomocu state.value \n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  //  const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    // initial state for emailState\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState; // object destructuring - koristi se da bi se izvukao property iz objekta\n\n  const {\n    isValid: passwordIsValid\n  } = passwordState; // isValid property smestamo u alijas pod proizvoljnim nazivom, sto je ustvari konstanta\n\n  useEffect(() => {\n    // pomocu ove f-je se dugme za login disable-uje i enabluje direktno prilikom menjanja pass ili username-a\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500); // ceka se da korisnik prestane sa kucanjem najmanje 500ms kako bi tek onda proverio da li uneti username postoji,\n    //   a to se radi zbog optimizacije kako ne bi vrsio proveru posle svakog unetog karaktera \n\n    return () => {\n      // cleanup f-ja koja se pokrece svaki put pre izvrsenja ove gore f-je\n      console.log('CLEANUP');\n      clearTimeout(identifier); // f-ja koja je ugradjena u browser\n    };\n  }, [emailIsValid, passwordIsValid]); // u dependecies se dodaje ono sto ide u sideEffect f-ji\n  //  pokrenuce sideEffect f-ju ako su emailIsValid ili passwordIsValid promenjeni\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // )\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"JpSwk7VN/OoduTwXknVLObQ7DCM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/Think/Desktop/react udemy/React-udemy/side efect - section 10/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useState, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n// moze da se pise izvan login komponente jer ne interaguje ni sa cim unutar login komponente\nconst emailReducer = (state, action) => {       // drugi arg je f-ja koja ce pozvati akciju koja ce biti consumed by prvi arg\n  if(action.type === 'USER_INPUT') {      // ono sto saljemo kao action ce biti objekat jer smo tako postavili u 54. liniji, a taj objekat ima type polje\n    return { value: action.val, isValid: action.val.includes('@') };\n  }  \n  if(action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };    // za INPUT_BLUR ne menjamo value, pa ovde preuzimamo najnoviju vrednost pomocu state.value \n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {     \n  if(action.type === 'USER_INPUT') {     \n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }  \n  if(action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };   \n  }\n  return { value: '', isValid: false };\n};\n\n\nconst Login = (props) => {\n // const [enteredEmail, setEnteredEmail] = useState('');\n // const [emailIsValid, setEmailIsValid] = useState();\n//  const [enteredPassword, setEnteredPassword] = useState('');\n // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n     value: '',                // initial state for emailState\n     isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null,\n  })\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n\n   const { isValid: emailIsValid } = emailState;         // object destructuring - koristi se da bi se izvukao property iz objekta\n   const { isValid: passwordIsValid } = passwordState;  // isValid property smestamo u alijas pod proizvoljnim nazivom, sto je ustvari konstanta\n\n\n  useEffect(() => {                              // pomocu ove f-je se dugme za login disable-uje i enabluje direktno prilikom menjanja pass ili username-a\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n    setFormIsValid(emailIsValid && passwordIsValid);\n  }, 500);                                     // ceka se da korisnik prestane sa kucanjem najmanje 500ms kako bi tek onda proverio da li uneti username postoji,\n                                           //   a to se radi zbog optimizacije kako ne bi vrsio proveru posle svakog unetog karaktera \n    return () => {                            // cleanup f-ja koja se pokrece svaki put pre izvrsenja ove gore f-je\n      console.log('CLEANUP');\n      clearTimeout(identifier);              // f-ja koja je ugradjena u browser\n    };    \n  },\n  [emailIsValid, passwordIsValid]);  // u dependecies se dodaje ono sto ide u sideEffect f-ji\n                                 //  pokrenuce sideEffect f-ju ako su emailIsValid ili passwordIsValid promenjeni\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // )\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}